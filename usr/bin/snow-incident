#!/usr/bin/env perl

=head1 NAME

snow-incident - prints useful information about a Service Now incident

=head1 SYNOPSIS

B<snow-incident> F<INCIDENT_NUMBER>

B<snow-incident> --man

=head1 DESCRIPTION

snow-incident prints useful information about a Service Now incident on STDOUT.
Specifically, we query the SN database for a given incident number (or list
of numbers), and for each one we create a human-readable report containing
relevant information.

=cut

##############################################################################
### Configuration ############################################################
##############################################################################

# these should move
use lib '/home/tskirvin/rpm/fnal-snow/lib';
our $CONFIG_FILE = '/home/tskirvin/rpm/fnal-snow/etc/snow/config.yaml';

our $DEBUG = 0;
our $TYPE = 'base';

##############################################################################
### Declarations #############################################################
##############################################################################

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use FNAL::SNOW;

$|++;

##############################################################################
### Subroutines ##############################################################
##############################################################################

### error_usage (ERROR)
# Exit out with pod2usage.
sub error_usage {
    my ($error) = @_;
    pod2usage (-msg => $error, -exit_status => 2, -verbose => 1);
}

### debug (MSG)
# Print a debugging message if $DEBUG is set.
sub debug { if ($DEBUG) { warn "@_\n" } }

##############################################################################
### main () ##################################################################
##############################################################################

my $parser = Getopt::Long::Parser->new();
my $result = $parser->getoptions (
    'd|debug'  => \$DEBUG,
    'c|config' => \$CONFIG_FILE,
    't|type=s' => \$TYPE,
    'man'      => sub { pod2usage (-verbose => 2, -noperldoc => 1) },
    'h|help'   => sub { pod2usage (-verbose => 1) }) || error_usage ();

debug "Creating FNAL::SNOW object: $CONFIG_FILE";
my $SNOW = FNAL::SNOW->init ('config_file' => $CONFIG_FILE, 'debug' => $DEBUG);
my $CONFIG = $SNOW->config_hash;

debug "Connecting to ServiceNow at $CONFIG->{servicenow}->{url}";
$SNOW->connect or die "could not connect to SN\n";

pod2usage ("invalid type: $TYPE") 
    unless $TYPE =~ /^(base|debug|worklog)$/i;

pod2usage ("no incidents requested") unless scalar @ARGV;
foreach my $incnum (@ARGV) { 

    debug "Looking up incident '$incnum'";
    my @incident = $SNOW->incident_by_number ($incnum);
    unless (@incident) { print "unable to load incident: '$incnum'\n"; }

    if    (lc $TYPE eq 'base') { 
        print scalar $SNOW->tkt_string_base (@incident);
    }
    elsif (lc $TYPE eq 'debug') { 
        print scalar $SNOW->tkt_string_debug (@incident);
    }
    elsif (lc $TYPE eq 'worklog') { 
        print scalar $SNOW->tkt_string_worklog (@incident);
    }
}

exit 0;

##############################################################################
### Final Documentation ######################################################
##############################################################################

=head1 OPTIONS 

=over 4

=item B<--config> I<CONFIG>

=item B<--debug>

=item B<--type> I<TYPE>

What kinds of output should we print?  We currently support:

=over 2

=item B<--type> F<base>

Prints basic information about the ticket, the requestor, who it has been
assigned to, resolution information, and a summary of the associated work
log entries.  Returns results that look something like this (but longer):

  Primary Ticket Information
    Number:              INC000000389936
    Summary:             Couldn't log in to cmslpc
    Status:              Closed
    Submitted:           2013-07-10 15:40:18 CDT
    Urgency:             3 - Medium
    Priority:            3 - Medium
    Service Type:        User Service Restoration

  Requestor Info
    Name:                chamath

  Assignee Info
    Group:               CMS-Tier1-LPC
    Name:                Timothy Skirvin
    Last Modified:       2013-07-14 05:00:07 CDT

  User-Provided Description
    [...]

  Worklog Entries
    Entry 5
      Date:                2013-07-10 16:58:42 CDT
      Created By:          youngr
  
      cmslpc21 is not available. Not responding to pings
  
    [...]

  Resolution
    Resolved By:         Timothy Skirvin
    Date:                2013-07-10 12:31:19 CDT
    Close Code:          Permanent Solution
  
    Pointed at the current documentation and current server list.  [...]
    
=item B<--type> F<debug>

Prints complete inforamation about the ticket (and not necessarily the related
information.  Results look something like this:

  == 000756e0a1eec500a57871f8766cbd17 ==
    active                             (empty)
    activity_due                       (empty)
    approval                           not requested
    approval_set                       (empty)
    assigned_to                        b257d72b98327c404478f9749d9cf2c3
    assignment_group                   9cbb42cb0a0a3c590094114cb950ec33
    business_duration                  1970-01-01 01:51:01
    [...]
  
=item B<--type> F<worklog>

Just returns the 'Worklog Entries' information, as above.

=back

Default: F<base>.

=item B<--help>

Prints out basic full help documentation and exits.

=item B<--man>

Prints out the full help documentation and exits.

=back

=head1 REQUIREMENTS

B<FNAL::SNOW>

=head1 EXAMPLES

    snow-incident 389936
    snow-incident INC000000389936 --type debug

=head1 AUTHOR

Tim Skirvin <tskirvin@fnal.gov>

=head1 LICENSE

Copyright 2014, Fermi National Accelerator Laboratory

This program is free software; you may redistribute it and/or modify it under
the same terms as Perl itself.

=cut
